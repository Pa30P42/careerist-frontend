{"version":3,"sources":["components/Form/FormStyled.js","api/api.js","components/Form/hooks/useForm.js","components/Form/Form.js","components/PostsList/PostsListStyled.js","components/Pagination/Pagination.js","components/PostsList/PostsListItem/PostsListItemStyled.js","components/PostsList/PostsListItem/PostsListItem.js","components/PostsList/PostsList.js","pages/hooks/useMainPage.js","pages/MainPageStyled.js","pages/MainPage.js","App.js","index.js"],"names":["Button","styled","button","Label","label","Textarea","textarea","Input","input","FormContainer","form","axios","defaults","baseURL","getPosts","page","a","get","res","data","addPost","post","useForm","checkPostHandler","useState","name","setName","text","setText","nameHandler","e","target","value","textHandler","onSubmit","preventDefault","newPost","Form","onChange","rows","cols","type","Container","div","List","ul","Pagination","allPages","handlePageClick","pageLinkClassName","nextClassName","nextLinkClassName","previousClassName","previousLinkClassName","previousLabel","nextLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","pageClassName","breakLabel","onPageChange","containerClassName","subContainerClassName","activeClassName","Title","h3","Post","li","PostsListItem","PostsList","posts","paginate","map","_id","useMainPage","setPosts","setPaginate","setAllPages","setPage","checkPost","setCheckPost","useEffect","then","selectedPostsList","totalPages","selected","MainPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84fe4a00.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  width: 200px;\n  margin: 0 auto;\n  display: block;\n  padding: 10px;\n  border-radius: 4px;\n  outline: 0;\n  border: 0;\n  background-color: #423737;\n  color: #fff;\n  :hover {\n    background-color: #87e8de;\n  }\n`;\n\nexport const Label = styled.label`\n  text-align: left;\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #423737;\n  display: block;\n`;\n\nexport const Textarea = styled.textarea`\n  border-radius: 4px;\n  width: 80%auto;\n  padding-left: 15px;\n  margin-bottom: 10px;\n  border: 1px solid #423737;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  border-radius: 4px;\n  width: 80%auto;\n  padding-left: 15px;\n  margin-bottom: 10px;\n  border: 1px solid #423737;\n`;\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  width: 400px;\n  max-width: 85vw;\n  margin: 0 auto;\n  background-color: white;\n  opacity: 0.7;\n  padding: 15px;\n  margin-bottom: 30px;\n  border-radius: 8px;\n`;\n","import axios from \"axios\";\naxios.defaults.baseURL = `https://dry-ravine-95192.herokuapp.com`;\n\nexport const getPosts = async (page) => {\n  const res = await axios.get(`/posts${page ? `?page=${page}` : \"\"}`);\n  return res.data;\n};\n\nexport const addPost = async (post) => {\n  const res = await axios.post(`/posts`, post);\n  return res.data;\n};\n","import { useState } from \"react\";\nimport { addPost } from \"../../../api/api\";\n\nconst useForm = ({ checkPostHandler }) => {\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const nameHandler = (e) => {\n    setName(e.target.value);\n  };\n  const textHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const newPost = { name, text };\n\n    await addPost(newPost);\n    checkPostHandler();\n\n    setName(\"\");\n    setText(\"\");\n  };\n\n  return {\n    nameHandler,\n    textHandler,\n    onSubmit,\n    name,\n    text,\n  };\n};\n\nexport default useForm;\n","import React from \"react\";\nimport { Button, Label, Textarea, Input, FormContainer } from \"./FormStyled\";\nimport useForm from \"./hooks/useForm\";\n\nconst Form = ({ checkPostHandler }) => {\n  const { nameHandler, textHandler, onSubmit, name, text } = useForm({\n    checkPostHandler,\n  });\n  return (\n    <FormContainer onSubmit={onSubmit}>\n      <Label>Enter your name:</Label>\n      <Input value={name} onChange={nameHandler} />\n      <Label>Leave your post:</Label>\n      <Textarea rows={10} cols={30} value={text} onChange={textHandler} />\n      <Button type=\"submit\">Add post</Button>\n    </FormContainer>\n  );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  align-items: center;\n  display: flex;\n  flex-flow: column;\n  height: 1000px;\n  overflow-y: scroll;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./PaginationStyles.css\";\n\nconst Pagination = ({ allPages, handlePageClick }) => {\n  return (\n    <ReactPaginate\n      pageLinkClassName={\"pageLinkClassName \"}\n      nextClassName={\"next\"}\n      nextLinkClassName={\"nextLink\"}\n      previousClassName={\"previous\"}\n      previousLinkClassName={\"previousLink\"}\n      previousLabel={\"Prev\"}\n      nextLabel={\"Next\"}\n      pageCount={allPages}\n      marginPagesDisplayed={0}\n      pageRangeDisplayed={4}\n      pageClassName={\"pageName\"}\n      breakLabel={\"\"}\n      onPageChange={handlePageClick}\n      containerClassName={\"pagination\"}\n      subContainerClassName={\"pagesPagination\"}\n      activeClassName={\"active\"}\n    />\n  );\n};\n\nexport default Pagination;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h3`\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const Post = styled.li`\n  font-size: 22px;\n  background-color: #423737;\n  opacity: 0.75;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 10px;\n  width: 80%;\n  text-align: center;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  :hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    transform: scale(1.1);\n  }\n`;\n","import React from \"react\";\nimport { Title, Post } from \"./PostsListItemStyled\";\n\nconst PostsListItem = ({ post }) => {\n  return (\n    <Post>\n      <Title>{post.name}</Title>\n      <p> {post.text} </p>\n    </Post>\n  );\n};\n\nexport default PostsListItem;\n","import React from \"react\";\nimport { Container, List } from \"./PostsListStyled\";\nimport Pagination from \"../Pagination/Pagination\";\nimport PostsListItem from \"./PostsListItem/PostsListItem\";\n\nconst PostsList = ({ posts, paginate, handlePageClick, allPages }) => {\n  return (\n    <Container>\n      <List>\n        {posts &&\n          posts.map((post) => <PostsListItem key={post._id} post={post} />)}\n      </List>\n      {paginate && (\n        <Pagination allPages={allPages} handlePageClick={handlePageClick} />\n      )}\n    </Container>\n  );\n};\n\nexport default PostsList;\n","import { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../api/api\";\n\nconst useMainPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [paginate, setPaginate] = useState(false);\n  const [allPages, setAllPages] = useState(0);\n  const [page, setPage] = useState(1);\n\n  const [checkPost, setCheckPost] = useState(false);\n  const checkPostHandler = () => {\n    setCheckPost(!checkPost);\n  };\n\n  const handlePageClick = (e) => {\n    setPage(e.selected + 1);\n  };\n\n  useEffect(() => {\n    getPosts(page).then((res) => {\n      setPosts(res.data.selectedPostsList);\n      setAllPages(res.totalPages);\n      setPaginate(res.paginate);\n    });\n  }, [page, paginate, checkPost]);\n\n  return {\n    paginate,\n    posts,\n    allPages,\n    checkPost,\n    checkPostHandler,\n    setPosts,\n    handlePageClick,\n  };\n};\n\nexport default useMainPage;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 85vw;\n  padding-top: 40px;\n  margin: 0 auto;\n`;\n","import React from \"react\";\nimport Form from \"../components/Form/Form\";\nimport PostsList from \"../components/PostsList/PostsList\";\nimport useMainPage from \"./hooks/useMainPage\";\nimport { Container } from \"./MainPageStyled\";\n\nconst MainPage = () => {\n  const {\n    paginate,\n    posts,\n    allPages,\n    checkPost,\n    checkPostHandler,\n    setPosts,\n    handlePageClick,\n  } = useMainPage();\n  return (\n    <Container>\n      <Form\n        checkPost={checkPost}\n        checkPostHandler={checkPostHandler}\n        posts={posts}\n        setPosts={setPosts}\n      />\n      <PostsList\n        allPages={allPages}\n        handlePageClick={handlePageClick}\n        posts={posts}\n        paginate={paginate}\n      />\n    </Container>\n  );\n};\n\nexport default MainPage;\n","import MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return <MainPage />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheet/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}